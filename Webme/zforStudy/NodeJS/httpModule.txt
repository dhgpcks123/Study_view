Node.js

-	Node.js는 서버사이드 스크립트이다
	서버 : 서비스를 제공하는 사람.
	서버쪽에서 사용하는 스크립트라는 의미


-	서버를 열기 위해선 http 모듈이 필요하다.
	http모듈은 Node.js 자체 내장 모듈이다.
	

const http = require('http')

const port = 8001
const server = http.createServer(function(request, response){
	response.writeHead(200, { 'Content-Type': 'text/html' } );
	response.write('Hello World!');
	response.end();

});

server.listen(port, function(){
	console.log('서버가 실행되었습니다!');
})


* 토막상식 port
 : 항구... 서버가 정말 많겠지? 그럴 때 내 port번호를 알려주는거야.
 	내가 연 서버에 접속하려면 80번 항구로 와!
 	스타크래프트하고 싶어 ? 6112번 항구로 와!
 	처럼 클라이언트가 서버를 잘 찾아올 수 있도록 port번호를 사용하는 것이다.

* 토막상식 헤더(Header)
 : 서버에 무언가를 요청하거나, 응답 받을 땐느 헤더라는 정보를 전송해야 한다.
	어떤 것을 요청하고, 어떤 것을 가지고 이고 등등... 다양한 정보가 담겨있다.
	3줄 요약임. 준비를 하는 것이지.
	
--
const server = http.createServer(function(request, response){
	1)console.log(request.connection.remoteAddress);
	2)response.writeHead(200, { 'Content-Type': 'text/html' } );
	3)response.write('Hello World!');
	4)response.end();
});
서버를 만들기 위해서는 http의 createServer 메서드를 이용해야 한다.
콜백 함수를 쓰고, request, response 매개변수를 갖고 있다.
request : 서버에 접속한 클라이언트의 정보 담김
response : 서버가 클라이언트에 응답할 때 사용하는 정보 담김

	### 클라이언트의 요청을 받아서
	1) request.connection.remoteAddress로 접속한 ip 정보 볼 수 있음.
	### 서버로써 응답을 주자.
	2) response.writeHead(200, {'Content-Type':'text/html'})
		: 200< 상태코드. 서버의 응답상태를 나타내는 숫자인데 이미 정해져있음.
			https://ko.wikipedia.org/wiki/HTTP_%EC%83%81%ED%83%9C_%EC%BD%94%EB%93%9C
		: {'Content-Type':'text/html'} 응답하는 내용 content타입을 알려주는 것이지.
			text/html형태를 mime이라고부르는데 다양한 포맷이 있겠지?
	3) response.write('hello World'); 메인 내용이 담기는 곳이겠지?
	4) response.end(); 제 반응 끝났습니다~~
	
--
이제 서버를 열어!라는 명령을 줘야겠죠?
쒀버~ 뤼쓴! 포트번호 이걸로 열어~!
	server.listen(포트번호, 서버가 열린 후 작동될 함수) 
	server.listen(port, function(){
		const now = new Date().toGMTString()
		console.log(now = '서버가 실행되었습니다!');
	});

